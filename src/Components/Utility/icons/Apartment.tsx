import React from 'react'
import { useState, useEffect } from 'react'

interface props {
 active: boolean | string
}

const Apartment = ({active}: props) => {
  const [isActive, setActive] = useState(false)


  useEffect(() => {
    console.log(typeof active)
    if(typeof active === 'string' ){
      if(active === 'Apartment'){
        setActive(true)
      }else{
        setActive(false)
      }
    }else {
      setActive(active)
    }
  }, [active])

  return (
   <svg width="17" height="17" viewBox="0 0 17 17" fill="none" xmlns="http://www.w3.org/2000/svg">
   <path className={`${ isActive ? 'fill-headerSecondary' : 'fill-headerPrimary'} transition-all ease-in duration-75 `} fillRule="evenodd" clipRule="evenodd" d="M15.0116 6.90393L15.5936 7.41345C15.7094 7.51219 15.8562 7.557 16.0021 7.53818C16.1479 7.51936 16.2811 7.43841 16.3728 7.31289C16.4644 7.18737 16.5072 7.02739 16.4917 6.86765C16.4762 6.70791 16.4038 6.56127 16.2901 6.45954L10.2436 1.16909C9.74875 0.735971 9.13382 0.5 8.5 0.5C7.86618 0.5 7.25125 0.735971 6.75637 1.16909L0.70986 6.45954C0.594201 6.56067 0.520012 6.70791 0.503614 6.86887C0.487215 7.02983 0.529951 7.19132 0.622419 7.31781C0.714887 7.44431 0.849513 7.52545 0.996681 7.54338C1.14385 7.56132 1.2915 7.51458 1.40716 7.41345L1.98837 6.90393V15.2791H1.05814C0.910112 15.2791 0.768147 15.3434 0.663475 15.4579C0.558804 15.5724 0.5 15.7277 0.5 15.8896C0.5 16.0515 0.558804 16.2067 0.663475 16.3212C0.768147 16.4357 0.910112 16.5 1.05814 16.5H15.9419C16.0899 16.5 16.2319 16.4357 16.3365 16.3212C16.4412 16.2067 16.5 16.0515 16.5 15.8896C16.5 15.7277 16.4412 15.5724 16.3365 15.4579C16.2319 15.3434 16.0899 15.2791 15.9419 15.2791H15.0116V6.90393ZM6.45349 5.71562C6.45349 5.12199 6.6691 4.55268 7.0529 4.13292C7.43669 3.71317 7.95723 3.47735 8.5 3.47735C9.04277 3.47735 9.56331 3.71317 9.9471 4.13292C10.3309 4.55268 10.5465 5.12199 10.5465 5.71562C10.5465 6.30924 10.3309 6.87856 9.9471 7.29831C9.56331 7.71807 9.04277 7.95389 8.5 7.95389C7.95723 7.95389 7.43669 7.71807 7.0529 7.29831C6.6691 6.87856 6.45349 6.30924 6.45349 5.71562ZM8.53721 8.7678C9.03135 8.7678 9.45777 8.7678 9.79935 8.81826C10.1655 8.87198 10.516 8.99326 10.8003 9.30417C11.0846 9.61509 11.1954 9.99844 11.2446 10.3989C11.2877 10.7489 11.2907 11.1802 11.2907 11.6792V15.2791H10.1744V11.82C10.1744 11.2275 10.1729 10.8433 10.1387 10.5617C10.106 10.2971 10.0539 10.2141 10.0107 10.1677C9.96828 10.1213 9.89237 10.0636 9.65051 10.0277C9.39228 9.9903 9.04177 9.98868 8.5 9.98868C7.95823 9.98868 7.60698 9.9903 7.34949 10.0277C7.10763 10.0636 7.03172 10.1213 6.9893 10.1677C6.94688 10.2141 6.89405 10.2971 6.8613 10.5617C6.82707 10.8441 6.82558 11.2275 6.82558 11.82V15.2791H5.7093V11.7793C5.7093 11.2389 5.7093 10.7725 5.75544 10.3989C5.80456 9.99844 5.91544 9.61509 6.19972 9.30417C6.484 8.99326 6.83526 8.87198 7.20065 8.81826C7.54223 8.7678 7.96865 8.7678 8.46353 8.7678H8.53646H8.53721Z" fill="currentColor"/>
 </svg>
  )
}

export default Apartment